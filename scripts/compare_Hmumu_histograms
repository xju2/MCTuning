#!/usr/bin/env python
"""A script compare Histograms saved in ROOT Files
The first file is treated as reference!
"""
from __future__ import print_function
from __future__ import division

import ROOT
ROOT.gROOT.SetBatch()

from root_plot_utils import AtlasStyle
from root_plot_utils.ploter import Ploter

def change_range(hh):
    tt = hh.GetName()+"_CP"
    hh_cp = ROOT.TH1F(tt, tt, 900, 110, 200)
    hh_cp.SetDirectory(0)
    s_bin = hh.FindBin(110)
    e_bin = hh.FindBin(200)
    for ibin in range(900):
        hh_cp.SetBinContent(ibin+1, hh.GetBinContent(s_bin+ibin))
        hh_cp.SetBinError(ibin+1, hh.GetBinError(s_bin+ibin))
    return hh_cp

if __name__ == "__main__":
    import argparse
    import os
    import yaml

    parser = argparse.ArgumentParser(description='Compare Histograms')
    add_arg = parser.add_argument
    add_arg('sherpa', help='Sherpa File')
    add_arg('other', help='other files')
    add_arg('--outdir', help='output directory', default='plot')
    add_arg('--indir', help='output directory', default='inputs')
    args = parser.parse_args()

    f_sherpa_name = args.sherpa
    fin_name = args.other
    outdir = args.outdir
    if not os.path.exists(outdir):
        os.makedirs(outdir)

    input_dir = args.indir
    #f_sherpa_name = os.path.join(input_dir, 'sherpa_smearedHist.root')
    #fin_name = os.path.join(input_dir, 'hist_20191117_reduce50.root')
    f_sherpa_name = os.path.join(input_dir, f_sherpa_name)
    fin_name = os.path.join(input_dir, fin_name)
    ps = Ploter("Internal", 139)

    ## read in files
    sherpa = ROOT.TFile.Open(f_sherpa_name)
    fin = ROOT.TFile.Open(fin_name)

    ## prepare histograms
    prefix_sherpa = 'smearHist_reweight_{}'
    #prefix_sherpa = 'DYHist_{}'
    prefix_powHeg = 'smearHist_reweight_{}'
    prefix_data = 'dataHist_fillWin_{}'
    prefix_fullSim = 'bkgHist_{}'

    sample_labels = ['Data', 'Sherpa 50ab^{-1}', 'Jan v15 scaled to 50ab^{-1}', 'Full-Sim']
    line_colors = [1, 2, 8, 4]
    category_labels = ['VBF High', 'VBF Medium', 'VBF Low',
                       '2-Jet High', '2-Jet Medium', '2-Jet Low',
                       '1-Jet High', '1-Jet Medium', '1-Jet Low',
                       '0-Jet High', '0-Jet Medium', '0-Jet Low']

    ps.COLORS = line_colors

    plot_base_opt = {
        "ratio_range": (0.93, 1.07),
        "add_ratio": True,
        "out_folder": outdir,
        "no_fill": True,
        "density": False,
        "draw_option": "HIST E1",
    }
    for ir in range(len(category_labels)):
        print("running {}".format(category_labels[ir]))
        icat = ir+1
        h1 = fin.Get(prefix_data.format(icat))
        h1.GetYaxis().SetTitle('Events / 2 GeV')
        h1.GetXaxis().SetTitle('m_{#mu#mu} [GeV]')

        h2 = sherpa.Get(prefix_sherpa.format(icat))
        h3 = fin.Get(prefix_powHeg.format(icat))
        h4 = fin.Get(prefix_fullSim.format(icat))
        hists = [h1, h2, h3, h4]

        start_bin = h1.GetXaxis().FindBin(110)
        end_bin = h1.GetXaxis().FindBin(160)
        data_yield = h1.Integral(start_bin, end_bin)
        for ih,hist in enumerate(hists):
            if ih==1:
                start = hist.FindBin(110)
                end = hist.FindBin(160)
                hist.Scale(data_yield/hist.Integral(start, end))
            hist.Rebin(20)
            hist.GetXaxis().SetRangeUser(110, 160)

        plot_base_opt['out_name'] = 'mass_{}'.format(icat)
        plot_base_opt['label'] = category_labels[ir]

        ps.compare_hists(hists, sample_labels, **plot_base_opt)
